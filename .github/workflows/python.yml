# This is a basic workflow to help you get started with Actions

name: python testing

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # PYTHON_INSTALL_DIR: C:\Python38-x64
  PYTHON_INSTALL_DIR: C:\Python-x64
  PYTHON_VERSION: 3.8.10
  # PYTHON_DOWNLOAD_3_8_10: https://github.com/actions/python-versions/releases/download/3.8.10-117959/python-3.8.10-win32-x64.zip
  # PYTHON_DOWNLOAD_3_8_6: https://github.com/actions/python-versions/releases/download/3.8.6-117961/python-3.8.6-win32-x64.zip

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-2019, windows-latest]
        os: [windows-2019, windows-latest]
        python-version: ['3.8.6', '3.8.10']
        python-platform: ['amd64']
        # exclude:
        #   - os: macos-latest
        #     python-version: '3.8.10'
        #   - os: ubuntu-latest
        #     python-version: '3.8.10'
    steps:
      # - uses: actions/checkout@v3
      # - name: Set up Python
      #   uses: actions/setup-python@v3
      #   with:
      #     python-version: ${{ matrix.python-version }}
      # - name: get version
      #   run: python --version

      # - name: list libs
      #   run: python -c "import sysconfig;import os; print(os.listdir(sysconfig.get_config_vars('prefix')[0] + '/libs'))"

      - name: Cache (Python)
        uses: actions/cache@v1.1.2
        id: cache-python
        with:
          path: '${{ env.PYTHON_INSTALL_DIR }}\'
          key: '${{ runner.os }}-PythonCache-v${{ matrix.python-version }}-${{ matrix.python-platform }}-dbg'

      - name: Download Python
        uses: carlosperate/download-file-action@v1.0.3
        id: download-python
        with:
         file-url: 'https://www.python.org/ftp/python/${{ matrix.python-version }}/python-${{ matrix.python-version }}-${{ matrix.python-platform }}.exe'
         file-name: 'python-${{ matrix.python-version }}-${{ matrix.python-platform }}.exe'
         location: '${{ runner.workspace }}\dl\'
        if: steps.cache-python.outputs.cache-hit != 'true'

      - name: Install Python debug (x64) # we need debug binaries and precompiled standard libraries
        run: |
          Start-Process -FilePath "${{ runner.workspace }}\dl\python-${{ matrix.python-version }}-${{ matrix.python-platform }}.exe" -ArgumentList "/quiet Include_debug=1 Include_dev=1 Include_lib=1 Include_pip=1 PrependPath=1 CompileAll=1 InstallAllUsers=0 TargetDir=${{ env.PYTHON_INSTALL_DIR }}\" -Verb runas -Wait
        # if: matrix.arch == 'x64' && steps.cache-python.outputs.cache-hit != 'true'
        # if: steps.cache-python.outputs.cache-hit != 'true'
        if: runner.os == 'Windows' && steps.cache-python.outputs.cache-hit != 'true'
        shell: pwsh

      - name: Display Python version
        run: ${{ env.PYTHON_INSTALL_DIR }}\python.exe -c "import sys; print(sys.version)"
        shell: cmd

      - name: List linker libs
        run: ${{ env.PYTHON_INSTALL_DIR }}\python -c "import sysconfig;import os; print(os.listdir(sysconfig.get_config_vars('prefix')[0] + '/libs'))"

      # - name: Upgrade Python pip
      #   run: |
      #     ${{ env.PYTHON_INSTALL_DIR }}\python.exe -m pip install --upgrade pip
      #   shell: cmd

      # - name: Install Python dependencies
      #   run: ${{ env.PYTHON_INSTALL_DIR }}\Scripts\pip.exe install -r ".github/workflows-support/requirements.txt"
      #   if: steps.cache-python.outputs.cache-hit != 'true'

  build-single:
    runs-on: windows-2019
    steps:
      - name: Cache (Python)
        uses: actions/cache@v1.1.2
        id: cache-python
        with:
          path: '${{ env.PYTHON_INSTALL_DIR }}\'
          key: 'Windows-PythonCache-v${{ env.PYTHON_VERSION }}-amd64'

      - name: Download Python
        uses: carlosperate/download-file-action@v1.0.3
        id: download-python
        with:
         file-url: 'https://www.python.org/ftp/python/${{ env.PYTHON_VERSION }}/python-${{ env.PYTHON_VERSION }}-amd64.exe'
         file-name: 'python-${{ env.PYTHON_VERSION }}-amd64.exe'
         location: '${{ runner.workspace }}\dl\'
        if: steps.cache-python.outputs.cache-hit != 'true'

      - name: Install Python debug (x64) # we need debug binaries and precompiled standard libraries
        run: |
          Start-Process -FilePath "${{ runner.workspace }}\dl\python-${{ env.PYTHON_VERSION }}-amd64.exe" -ArgumentList "/quiet Include_debug=1 Include_dev=1 Include_lib=1 Include_pip=1 PrependPath=1 CompileAll=1 InstallAllUsers=0 TargetDir=${{ env.PYTHON_INSTALL_DIR }}\" -Verb runas -Wait
        if: runner.os == 'Windows' && steps.cache-python.outputs.cache-hit != 'true'
        shell: pwsh

      - name: Display Python version
        run: ${{ env.PYTHON_INSTALL_DIR }}\python.exe -c "import sys; print(sys.version)"
        shell: cmd

      - name: List linker libs
        run: ${{ env.PYTHON_INSTALL_DIR }}\python -c "import sysconfig;import os; print(os.listdir(sysconfig.get_config_vars('prefix')[0] + '/libs'))"
